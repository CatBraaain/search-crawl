[project]
name = "search-crawl"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.14",
    "httpx>=0.28.1",
    "litellm>=1.76.2",
    "lxml[cssselect]>=5.4.0",
    "markitdown>=0.1.2",
    "patchright>=1.52.5",
    "readability-lxml>=0.8.4.1",
    "redis>=5.3.1",
]

[dependency-groups]
dev = [
    "search-crawl-client",
    "openapi-generator-cli[jdk4py]>=7.14.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "types-lxml>=2025.3.30",
]

[tool.uv]
package = true

[tool.uv.sources]
search-crawl-client = { path = "search_crawl_client" }

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
include = [ "pyproject.toml", "src/**/*.py", "tests/**/*.py" ]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [ "ALL" ]
ignore = [
    "ERA",   # eradicate[comment-out-code]
    "S110",  # flake8-bandit[try-except-pass]
    "S112",  # flake8-bandit[try-except-continue]
    "BLE",   # flake8-blind-except[bare-exception]
    "COM",   # flake8-commas[trailing-comma]
    "EM",    # flake8-errmsg
    "INP",   # flake8-no-pep420[implicit-namespace-package]
    "RET",   # flake8-return
    "D",     # pydocstyle
    "TC006", # runtime-cast-value
    "TRY",   # tryceratops
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "ANN201",  # flake8-annotations[missing-return-type-undocumented-public-function]
    "PLR2004", # Pylint-Refactor[magic-value-comparison]
    "S101",    # flake8-bandit[assert]
]
